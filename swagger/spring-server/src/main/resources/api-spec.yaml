swagger: '2.0'
info:
  version: 0.2.0
  title: Status API
  description: An API used to monitor status of various subscribed services
host: 'localhost:8080'
basePath: /
tags:
  - name: services
    description: Everything about services
schemes:
  - http

definitions:
  State:
    type: string
    enum: [up, down, maintenance]

  ServicePost:
    type: object
    required:
      - name
      - statusAddress
    properties:
      name:
        type: string
      statusAddress:
        type: string
      description:
        type: string
      state:
        $ref: '#/definitions/State'
      contact:
        type: string

  ServiceGet:
    type: object
    properties:
      self:
        type: string
      name:
        type: string
      statusAddress:
        type: string
      description:
        type: string
      state:
        $ref: '#/definitions/State'
      contact:
        type: string

  Error:
      type: object
      properties:
        timestamp:
          type: string
          #format: date-time
        message:
          type: string
        exception:
          type: string
        fields:
          type: array
          items:
            $ref: '#/definitions/ErroneousField'

    ErroneousField:
      type: object
      required:
        - fieldName
        - errorCode
      properties:
        fieldName:
          type: string
        errorCode:
          type: string

paths:
  /services:
    get:
      tags:
        - services
      summary: get the list of all subscribed services
      description: get the list of all subscribed services
      operationId: getServices
      produces:
        - application/json
      parameters:
        - name: status
          in: query
          description: 'Status wanted, none specified mean all'
          required: false
          type: string
          enum: ["up", "down", "maintenance"]
      responses:
        '200':
          description: success
          schema:
            type: array
            items:
              $ref: '#/definitions/ServiceGet'
        '400':
          description: 'Bad request, status unknow'
    post:
      tags:
        - services
      summary: add a new service to the pool
      description: add a service
      operationId: addService
      consumes:
        - application/json
      parameters:
        - name: Service
          in: body
          required: true
          schema:
            $ref: '#/definitions/ServicePost'
      responses:
        '201':
          description: created
        '400':
          description: Bad request
    put:
      tags:
        - services
      summary: modify a subscribed service
      description: ''
      parameters:
        - in: body
          name: Service(s)
          required: true
          schema:
            type: object
            items:
              $ref: '#/definitions/ServicePost'
      responses:
        '200':
          description: OK
        '400':
          description: Invalid ID
        '403':
          description: Forbidden
        '404':
          description: Service not found
  '/services/{serviceID}':
    get:
      tags:
        - services
      summary: Get the status of the selected service
      description: ''
      operationId: getOneService
      parameters:
        - in: path
          name: serviceID
          type: integer
          required: true
          description: Numeric ID of the service to get.
        - in: header
          name: token
          required: true
          type: string
          description: The user token
      produces:
        - application/json
      responses:
        '200':
          description: success
          schema:
            $ref: '#/definitions/ServiceGet'
        '400':
          description: Invalid ID
        '404':
          description: Service not found
    patch:
      tags:
        - services
      summary: Set the maintenance status for a service
      description: ''
      parameters:
        - in: path
          name: serviceID
          required: true
          description: Numeric ID of the service to patch.
          type: integer
        - in: header
          name: state
          type: integer
          required: true
          description: The new state of the service
      responses:
        '200':
          description: OK
        '400':
          description: Invalid ID
        '404':
          description: Service not found
    delete:
      tags:
        - services
      summary: Remove a subscribed service from the pool
      description: ''
      parameters:
        - in: path
          name: serviceID
          type: integer
          required: true
          description: Numeric ID of the service to delete.
      responses:
        '200':
          description: OK
        '400':
          description: Invalid ID
        '404':
          description: Service not found
definitions:
  ServicePost:
    type: object
    required:
      - name
      - statusAddress
    properties:
      name:
        type: string
      statusAddress:
        type: string
      description:
        type: string
      state:
        type: string
        enum: ["up", "down", "maintenance"]
      contact:
        type: string

  ServiceGet:
    type: object

    properties:
      self:
        type: string
      name:
        type: string
      statusAddress:
        type: string
      description:
        type: string
      state:
        type: string
        enum: ["up", "down", "maintenance"]
      contact:
        type: string

  Error:
    type: object
    properties:
      timestamp:
        type: string
        #format: date-time
      message:
        type: string
      exception:
        type: string
      fields:
        type: array
        items:
          $ref: '#/definitions/ErroneousField'

  ErroneousField:
    type: object
    required:
      - fieldName
      - errorCode
    properties:
      fieldName:
        type: string
      errorCode:
        type: string