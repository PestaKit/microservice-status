swagger: '2.0'
info:
  version: 0.2.2
  title: Status API
  description: An API used to monitor status of various subscribed services
host: 'localhost:8080'
basePath: /api
tags:
  - name: services
    description: Endpoints to manage services (add one service or get the list of all services)

  - name: service
    description: Endpoints to manage a single service
schemes:
  - http

definitions:
  State:
    type: string
    enum: [up, down, maintenance]

  ServicePost:
    type: object
    required:
      - name
      - state
    properties:
      name:
        type: string
      statusAddress:
        type: string
      statusPort:
        type: integer
      description:
        type: string
      state:
        $ref: '#/definitions/State'
      contact:
        type: string

  ServiceGet:
    type: object
    properties:
      self:
        type: string
      name:
        type: string
      statusAddress:
        type: string
      statusPort:
        type: integer
      description:
        type: string
      state:
        $ref: '#/definitions/State'
      contact:
        type: string

  Error:
      type: object
      properties:
        timestamp:
          type: string
          #format: date-time
        message:
          type: string
        exception:
          type: string
        fields:
          type: array
          items:
            $ref: '#/definitions/ErroneousField'

  ErroneousField:
    type: object
    required:
      - field
      - reason
    properties:
      field:
        type: string
      reason:
        type: string

paths:
  /services:
    get:
      tags:
        - services
      summary: get the list of all subscribed services
      description: get the list of all subscribed services
      operationId: getServices
      produces:
        - application/json
      parameters:
        - name: state
          in: query
          description: 'Status wanted, none specified mean all'
          required: false
          type: string
          enum: ["up", "down", "maintenance"]
      responses:
        '200':
          description: success
          schema:
            type: array
            items:
              $ref: '#/definitions/ServiceGet'
        '400':
          description: 'Bad request, status unknow'
    post:
      tags:
        - services
      summary: add a new service to the pool
      description: add a service
      operationId: addService
      consumes:
        - application/json
      parameters:
        - name: Service
          in: body
          required: true
          schema:
            $ref: '#/definitions/ServicePost'
      responses:
        '201':
          description: created
          schema:
            type: object
            properties:
              self:
                type: string
                description: The endpoint to contact to get the service status.
              uid:
                type: string
                description: The unique identifier for the service (PLEASE NOT IT DOWN).
        '400':
          description: Bad request
    delete:
      tags:
        - services
      summary: flush all the existing services FOR TEST PURPOSE ONLY
      description: delete all the services
      operationId: deleteServices
      parameters:
        - in: query
          name: passphrase
          type: string
          required: true
          description: Secret passphrase to access this endpoint
      responses:
        '200':
          description: success
        '401':
          description: Unauthorized
        '404':
          description: Service not found

  '/services/{serviceUID}':
    get:
      tags:
        - service
      summary: Get the status of the selected service
      description: ''
      operationId: getOneService
      parameters:
        - in: path
          name: serviceUID
          type: string
          required: true
          description: Numeric ID of the service to get.
      produces:
        - application/json
      responses:
        '200':
          description: success
          schema:
            $ref: '#/definitions/ServiceGet'
        '404':
          description: Service not found
    patch:
      tags:
        - service
      summary: Set the maintenance status for a service
      description: ''
      parameters:
        - in: path
          name: serviceUID
          required: true
          description: Numeric ID of the service to patch.
          type: string
        - in: body
          name: state
          schema:
            $ref: '#/definitions/State'
          required: true
          description: The new state of the service
      responses:
        '200':
          description: OK
        '400':
          description: Bad request
        '404':
          description: Service not found

    put:
      tags:
        - service
      summary: modify a subscribed service
      description: ''
      parameters:
        - in: path
          name: serviceUID
          required: true
          description: Numeric ID of the service to put.
          type: string
        - in: body
          name: "Service"
          required: true
          schema:
            $ref: '#/definitions/ServicePost'
      responses:
        '200':
          description: OK
        '400':
          description: Bad request
        '404':
          description: Service not found

    delete:
      tags:
        - service
      summary: Remove a subscribed service from the pool
      description: ''
      parameters:
        - in: path
          name: serviceUID
          type: string
          required: true
          description: Numeric ID of the service to delete.
      responses:
        '200':
          description: OK
        '404':
          description: Service not found
